{"version":3,"file":"component---src-templates-tags-js-3b2a52ea17011219d3c8.js","mappings":"uIAkCA,IA/Be,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,8BAAQ,OACF,IAAIO,MAAOC,cAAc,wBAC7B,KAEE,C,+CCSV,IA7BY,IAAuC,IAAD,MAArC,YAAEC,EAAW,MAAEV,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,cAa1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMgB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YAChChB,EACA,C,gHCEP,MA/Ba,IAAoC,IAAnC,YAACkB,EAAW,KAAEC,EAAI,SAAErB,GAAS,EACvC,MAAM,IAACsB,GAAOF,GACR,MAACG,EAAK,WAAEC,GAAcH,EAAKI,kBAC3BC,EAAYL,EAAKT,KAAKG,aAAad,MAInC0B,EAAeL,EAAG,WAAWE,EAAU,SAI7C,OACI,gBAAC,IAAM,CAACxB,SAAUA,EAAUC,MAAOyB,GAC/B,gBAAC,IAAG,CAACzB,MAAO0B,IACZ,0BAAKA,GACL,0BACKJ,EAAMK,KAAI,IAAa,IAAZ,KAACC,GAAK,EACd,MAAM,KAACC,GAAQD,EAAKE,QACd,MAAC9B,GAAS4B,EAAKG,YACrB,OACI,sBAAI1B,UCzBP,6BDyB+B2B,IAAKH,GAC7B,gBAAC,EAAAvB,KAAI,CAACC,GAAIsB,GAAO7B,GAChB,KAIjB,gBAAC,EAAAM,KAAI,CAACC,GAAG,SAAQ,YACZ,C","sources":["webpack://leejaehyeon/./src/components/layout.js","webpack://leejaehyeon/./src/components/seo.js","webpack://leejaehyeon/./src/templates/tags.js","webpack://leejaehyeon/./src/styles/tag.module.css"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        😎 {new Date().getFullYear()} 년에 발행된 비상업적 글들입니다 :)\n        {` `}\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\"\nimport * as Tag from \"../styles/tag.module.css\"\nimport {Link, graphql} from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Tags = ({pageContext, data, location}) => {\n    const {tag} = pageContext\n    const {edges, totalCount} = data.allMarkdownRemark\n    const siteTitle = data.site.siteMetadata.title\n    // const tagHeader = `${totalCount} post${\n    //     totalCount === 1 ? \"\" : \"s\"\n    // } tagged with \"${tag}\"`\n    const tagHeader = `${tag} 태그의 글은 ${totalCount}개 입니다.`\n    // s태그의 글은 n개입니다. 로 수정  230618\n\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Seo title={tagHeader}/>\n            <h1>{tagHeader}</h1>\n            <ul>\n                {edges.map(({node}) => {\n                    const {slug} = node.fields\n                    const {title} = node.frontmatter\n                    return (\n                        <li className={Tag.tagList} key={slug}>\n                            <Link to={slug}>{title}</Link>\n                        </li>\n                    )\n                })}\n            </ul>\n            <Link to=\"/tags\">All tags</Link>\n        </Layout>\n    )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(\n    limit: 2000\n    sort: {frontmatter: {date: ASC}}\n    filter: {frontmatter: {tags: {in: [$tag]}}}\n  ) {\n    totalCount\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var tagList = \"tag-module--tagList--128c5\";"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","pageContext","data","tag","edges","totalCount","allMarkdownRemark","siteTitle","tagHeader","map","node","slug","fields","frontmatter","key"],"sourceRoot":""}